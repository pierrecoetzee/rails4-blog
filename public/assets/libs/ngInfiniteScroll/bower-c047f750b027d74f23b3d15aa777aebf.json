var mod;mod=angular.module("infinite-scroll",[]),mod.value("THROTTLE_MILLISECONDS",null),mod.directive("infiniteScroll",["$rootScope","$window","$interval","THROTTLE_MILLISECONDS",function($rootScope,$window,$interval,THROTTLE_MILLISECONDS){return{scope:{infiniteScroll:"&",infiniteScrollContainer:"=",infiniteScrollDistance:"=",infiniteScrollDisabled:"=",infiniteScrollUseDocumentBottom:"=",infiniteScrollListenForEvent:"@"},link:function(scope,elem,attrs){var changeContainer,checkWhenEnabled,container,handleInfiniteScrollContainer,handleInfiniteScrollDisabled,handleInfiniteScrollDistance,handleInfiniteScrollUseDocumentBottom,handler,height,immediateCheck,offsetTop,pageYOffset,scrollDistance,scrollEnabled,throttle,unregisterEventListener,useDocumentBottom,windowElement;return windowElement=angular.element($window),scrollDistance=null,scrollEnabled=null,checkWhenEnabled=null,container=null,immediateCheck=!0,useDocumentBottom=!1,unregisterEventListener=null,height=function(elem){return elem=elem[0]||elem,isNaN(elem.offsetHeight)?elem.document.documentElement.clientHeight:elem.offsetHeight},offsetTop=function(elem){return elem[0].getBoundingClientRect&&!elem.css("none")?elem[0].getBoundingClientRect().top+pageYOffset(elem):void 0},pageYOffset=function(elem){return elem=elem[0]||elem,isNaN(window.pageYOffset)?elem.document.documentElement.scrollTop:elem.ownerDocument.defaultView.pageYOffset},handler=function(){var containerBottom,containerTopOffset,elementBottom,remaining,shouldScroll;return container===windowElement?(containerBottom=height(container)+pageYOffset(container[0].document.documentElement),elementBottom=offsetTop(elem)+height(elem)):(containerBottom=height(container),containerTopOffset=0,void 0!==offsetTop(container)&&(containerTopOffset=offsetTop(container)),elementBottom=offsetTop(elem)-containerTopOffset+height(elem)),useDocumentBottom&&(elementBottom=height((elem[0].ownerDocument||elem[0].document).documentElement)),remaining=elementBottom-containerBottom,shouldScroll=remaining<=height(container)*scrollDistance+1,shouldScroll?(checkWhenEnabled=!0,scrollEnabled?scope.$$phase||$rootScope.$$phase?scope.infiniteScroll():scope.$apply(scope.infiniteScroll):void 0):checkWhenEnabled=!1},throttle=function(func,wait){var later,previous,timeout;return timeout=null,previous=0,later=function(){var context;return previous=(new Date).getTime(),$interval.cancel(timeout),timeout=null,func.call(),context=null},function(){var now,remaining;return now=(new Date).getTime(),remaining=wait-(now-previous),0>=remaining?(clearTimeout(timeout),$interval.cancel(timeout),timeout=null,previous=now,func.call()):timeout?void 0:timeout=$interval(later,remaining,1)}},null!=THROTTLE_MILLISECONDS&&(handler=throttle(handler,THROTTLE_MILLISECONDS)),scope.$on("$destroy",function(){return container.unbind("scroll",handler),null!=unregisterEventListener?(unregisterEventListener(),unregisterEventListener=null):void 0}),handleInfiniteScrollDistance=function(v){return scrollDistance=parseFloat(v)||0},scope.$watch("infiniteScrollDistance",handleInfiniteScrollDistance),handleInfiniteScrollDistance(scope.infiniteScrollDistance),handleInfiniteScrollDisabled=function(v){return scrollEnabled=!v,scrollEnabled&&checkWhenEnabled?(checkWhenEnabled=!1,handler()):void 0},scope.$watch("infiniteScrollDisabled",handleInfiniteScrollDisabled),handleInfiniteScrollDisabled(scope.infiniteScrollDisabled),handleInfiniteScrollUseDocumentBottom=function(v){return useDocumentBottom=v},scope.$watch("infiniteScrollUseDocumentBottom",handleInfiniteScrollUseDocumentBottom),handleInfiniteScrollUseDocumentBottom(scope.infiniteScrollUseDocumentBottom),changeContainer=function(newContainer){return null!=container&&container.unbind("scroll",handler),container=newContainer,null!=newContainer?container.bind("scroll",handler):void 0},changeContainer(windowElement),scope.infiniteScrollListenForEvent&&(unregisterEventListener=$rootScope.$on(scope.infiniteScrollListenForEvent,handler)),handleInfiniteScrollContainer=function(newContainer){if(null!=newContainer&&0!==newContainer.length){if(newContainer instanceof HTMLElement?newContainer=angular.element(newContainer):"function"==typeof newContainer.append?newContainer=angular.element(newContainer[newContainer.length-1]):"string"==typeof newContainer&&(newContainer=angular.element(document.querySelector(newContainer))),null!=newContainer)return changeContainer(newContainer);throw new Exception("invalid infinite-scroll-container attribute.")}},scope.$watch("infiniteScrollContainer",handleInfiniteScrollContainer),handleInfiniteScrollContainer(scope.infiniteScrollContainer||[]),null!=attrs.infiniteScrollParent&&changeContainer(angular.element(elem.parent())),null!=attrs.infiniteScrollImmediateCheck&&(immediateCheck=scope.$eval(attrs.infiniteScrollImmediateCheck)),$interval(function(){return immediateCheck?handler():void 0},0,1)}}}]);